plugins {
    id "com.android.application"
    id "kotlin-android"
    id "org.jetbrains.kotlin.android"
    id "com.google.gms.google-services" version "4.4.2" apply false
    id "dev.flutter.flutter-gradle-plugin"
}

// Load local.properties (used by Flutter)
def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

// Load key.properties for signing (make sure key.properties exists at root of android/)
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

// Flutter version info
def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace = "com.aus.disstrikt"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        // Enable desugaring
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        applicationId = "com.aus.disstrikt"
        minSdkVersion 23
        targetSdk = 34
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        // Add multiDex support
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    // Add desugaring dependency
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
    // Add multidex support

        implementation 'androidx.core:core:1.13.1'
    implementation 'androidx.multidex:multidex:2.0.1'
}
